{"version":3,"file":"static/js/997.879e3155.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/Filter/Filter.styled.jsx","redux/filter/selectors.js","components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: ${props => props.theme.spacing(10)};\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  width: ${props => props.theme.spacing(92)};\n  margin-bottom: ${props => props.theme.spacing(5)};\n  outline: none;\n  padding: ${props => props.theme.spacing(3)};\n  border: 1px solid ${props => props.theme.colors.black};\n  border-radius: ${props => props.theme.spacing(1)};\n  color: ${props => props.theme.colors.gray};\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(4)};\n  transition: border-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n  :focus,\n  :hover {\n    border-color: ${props => props.theme.colors.blue};\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: ${props => props.theme.spacing(4)};\n  align-items: center;\n  width: ${props => props.theme.spacing(42)};\n  // font-weight: 600;\n  font-size: ${props => props.theme.spacing(4)};\n  padding: 6px 18px;\n  border: 1px solid transparent;\n  border-radius: ${props => props.theme.spacing(1)};\n  color: ${props => props.theme.colors.white};\n  background-color: ${props => props.theme.colors.btn};\n  transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  :hover {\n    background-color: ${props => props.theme.colors.blue};\n  }\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing(1)};\n  font-weight: 600;\n  font-size: ${props => props.theme.spacing(4)};\n  color: ${props => props.theme.colors.black};\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FilterLabel = styled.label`\n  color: ${props => props.theme.colors.title};\n`;\n","export const selectFilter = state => state.filter;\n","import { FilterForm, FilterLabel } from './Filter.styled';\nimport { Input, Span } from '../ContactForm/ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const normalizedValue = e.target.value.toLowerCase();\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <FilterForm>\n      <FilterLabel>\n        <Span>Find contacts by name</Span>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={handleChange}\n          placeholder=\"Please enter a name to search\"\n        />\n      </FilterLabel>\n    </FilterForm>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { Form, Label, Input, Button, Span } from './ContactForm.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n      case 'number':\n        setNumber(value.trim());\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (findName) {\n      Notiflix.Notify.failure(`${name}: is already in contacts`);\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Span>Name</Span>\n          <Input\n            type=\"text\"\n            placeholder=\"Your name\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          <Span>Number</Span>\n          <Input\n            type=\"tel\"\n            placeholder=\"Your number\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add to contacts</Button>\n      </Form>\n      <Filter />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  // -webkit-box-pack: justify;\n  justify-content: space-between;\n  margin: ${props => props.theme.spacing(2)};\n  // gap: ${props => props.theme.spacing(12)};\n  width: ${props => props.theme.spacing(97)};\n`;\n\nexport const Fragment = styled.p`\n  margin: 0;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(4)};\n  color: ${props => props.theme.colors.black};\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => props.theme.spacing(4)};\n  padding: 5px 16px;\n  border: 1px solid transparent;\n  border-radius: ${props => props.theme.spacing(1)};\n  color: ${props => props.theme.colors.white};\n  background-color: ${props => props.theme.colors.gray};\n  transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  &:focus,\n  :hover {\n    background-color: ${props => props.theme.colors.blue}};\n  }\n`;\n","import { ListWrapper, Item, Fragment, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ListWrapper>\n      {contacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Fragment>\n            {name}: {number}\n          </Fragment>\n          <Button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </ListWrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Loader } from '../components/Loader/Loader';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm />\n      <div>{isLoading && <Loader />}</div> <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","props","theme","spacing","Label","Input","colors","black","gray","blue","Button","white","btn","Span","FilterForm","FilterLabel","title","selectFilter","state","filter","Filter","value","useSelector","dispatch","useDispatch","type","onChange","e","normalizedValue","target","toLowerCase","changeFilter","placeholder","selectLoading","contacts","isLoading","selectContacts","items","selectVisibleContacts","createSelector","contact","name","includes","ContactForm","useState","setName","number","setNumber","handleChange","trim","onSubmit","preventDefault","normalizedName","find","Notiflix","addContacts","pattern","required","ListWrapper","Item","Fragment","ContactList","map","id","onClick","deleteContacts","Tasks","useEffect","fetchContacts","Loader"],"sourceRoot":""}